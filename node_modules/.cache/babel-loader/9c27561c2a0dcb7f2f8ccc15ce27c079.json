{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useRef } from 'react';\n\nconst useAnalogClock = () => {\n  _s();\n\n  const $hourHand = useRef(null);\n  const $minuteHand = useRef(null);\n  const $secondHand = useRef(null);\n  useEffect(() => {\n    const timerId = setInterval(() => {\n      const now = new Date();\n      const hours = now.getHours();\n      const minutes = now.getMinutes();\n      const seconds = now.getSeconds(); // 초침: 1초당 6도(360deg/60s) 회전\n\n      $secondHand.current.style.setProperty('--deg', seconds * 6); // 분침: 1시간당 360도, 1분당 6도(360deg/60m), 1초당 0.1도(6deg/60s) 회전\n\n      $minuteHand.current.style.setProperty('--deg', minutes * 6 + seconds * 0.1); // 시침: 1시간당 30도(360deg/12h), 1분당 0.5도(30deg/60m), 1초당 약 0.0083도(0.5deg/60s) 회전\n\n      $hourHand.current.style.setProperty('--deg', hours * 30 + minutes * 0.5 + seconds * (0.5 / 60));\n    }, 1000); // cleanup\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n  return [$hourHand, $minuteHand, $secondHand];\n};\n\n_s(useAnalogClock, \"hv9tc2bLygiCK/+BoKp/TrEju9k=\");\n\nexport default useAnalogClock;","map":{"version":3,"sources":["C:/study/fastcampus/security_code/ui-component/case7_analog-clock/question/2.react-styled-component/src/hooks/useAnalogClock.js"],"names":["useEffect","useRef","useAnalogClock","$hourHand","$minuteHand","$secondHand","timerId","setInterval","now","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","current","style","setProperty","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAMC,SAAS,GAAGF,MAAM,CAAC,IAAD,CAAxB;AACA,QAAMG,WAAW,GAAGH,MAAM,CAAC,IAAD,CAA1B;AACA,QAAMI,WAAW,GAAGJ,MAAM,CAAC,IAAD,CAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,OAAO,GAAGC,WAAW,CAAC,MAAM;AAChC,YAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AAEA,YAAMC,KAAK,GAAGF,GAAG,CAACG,QAAJ,EAAd;AACA,YAAMC,OAAO,GAAGJ,GAAG,CAACK,UAAJ,EAAhB;AACA,YAAMC,OAAO,GAAGN,GAAG,CAACO,UAAJ,EAAhB,CALgC,CAOhC;;AACAV,MAAAA,WAAW,CAACW,OAAZ,CAAoBC,KAApB,CAA0BC,WAA1B,CAAsC,OAAtC,EAA+CJ,OAAO,GAAG,CAAzD,EARgC,CAShC;;AACAV,MAAAA,WAAW,CAACY,OAAZ,CAAoBC,KAApB,CAA0BC,WAA1B,CAAsC,OAAtC,EAA+CN,OAAO,GAAG,CAAV,GAAcE,OAAO,GAAG,GAAvE,EAVgC,CAWhC;;AACAX,MAAAA,SAAS,CAACa,OAAV,CAAkBC,KAAlB,CAAwBC,WAAxB,CAAoC,OAApC,EAA6CR,KAAK,GAAG,EAAR,GAAaE,OAAO,GAAG,GAAvB,GAA6BE,OAAO,IAAI,MAAM,EAAV,CAAjF;AACD,KAb0B,EAaxB,IAbwB,CAA3B,CADc,CAgBd;;AACA,WAAO,MAAM;AACXK,MAAAA,aAAa,CAACb,OAAD,CAAb;AACD,KAFD;AAGD,GApBQ,EAoBN,EApBM,CAAT;AAsBA,SAAO,CAACH,SAAD,EAAYC,WAAZ,EAAyBC,WAAzB,CAAP;AACD,CA5BD;;GAAMH,c;;AA8BN,eAAeA,cAAf","sourcesContent":["import { useEffect, useRef } from 'react';\r\n\r\nconst useAnalogClock = () => {\r\n  const $hourHand = useRef(null);\r\n  const $minuteHand = useRef(null);\r\n  const $secondHand = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const timerId = setInterval(() => {\r\n      const now = new Date();\r\n\r\n      const hours = now.getHours();\r\n      const minutes = now.getMinutes();\r\n      const seconds = now.getSeconds();\r\n\r\n      // 초침: 1초당 6도(360deg/60s) 회전\r\n      $secondHand.current.style.setProperty('--deg', seconds * 6);\r\n      // 분침: 1시간당 360도, 1분당 6도(360deg/60m), 1초당 0.1도(6deg/60s) 회전\r\n      $minuteHand.current.style.setProperty('--deg', minutes * 6 + seconds * 0.1);\r\n      // 시침: 1시간당 30도(360deg/12h), 1분당 0.5도(30deg/60m), 1초당 약 0.0083도(0.5deg/60s) 회전\r\n      $hourHand.current.style.setProperty('--deg', hours * 30 + minutes * 0.5 + seconds * (0.5 / 60));\r\n    }, 1000);\r\n\r\n    // cleanup\r\n    return () => {\r\n      clearInterval(timerId);\r\n    };\r\n  }, []);\r\n\r\n  return [$hourHand, $minuteHand, $secondHand];\r\n};\r\n\r\nexport default useAnalogClock;\r\n"]},"metadata":{},"sourceType":"module"}